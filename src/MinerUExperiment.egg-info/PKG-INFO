Metadata-Version: 2.4
Name: MinerUExperiment
Version: 0.1.0
Summary: MinerUExperiment
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: mineru[all]>=2.5.0
Requires-Dist: torch>=2.3.0
Requires-Dist: huggingface_hub>=0.22.2
Requires-Dist: psutil>=5.9.0

# MinerUExperiment (replace via scripts/init.sh)

Baseline template for Python projects in Cursor on Ubuntu.

## Quick start (per project)
1. Run `scripts/init.sh <package_name> [python_version] "Description"`.
2. Open folder in Cursor (`cursor .`).
3. Ensure interpreter shows `.venv/bin/python`.
4. Run target tasks: **pytest**, **lint**, **format**.

See `.cursor/rules`, `.vscode/*`, and `environment.yml` for configuration details.

## MinerU + vLLM Environment

Run `scripts/setup_mineru_env.sh` to install system dependencies, the `mineru[all]` package, and download
the `MinerU2.5-2509-1.2B` model. The script also verifies an RTX 5090 GPU is visible to CUDA. Once the
environment is ready you can validate end-to-end processing with:

```bash
scripts/validate_mineru_setup.py PDFsToProcess/sample.pdf --output-dir MDFilesCreated
```

The validator runs a cold and warm processing pass, captures GPU utilization snapshots, and reports
the observed speedup after warmup. For programmatic access you can also run:

```bash
python - <<'PY'
from pathlib import Path
from MinerUExperiment import (
    ensure_model_downloaded,
    load_config,
    process_pdf,
    validate_pdf_processing,
)

config = load_config()
ensure_model_downloaded(config=config)
result = process_pdf(Path("PDFsToProcess/sample.pdf"))
print(result)

report = validate_pdf_processing(Path("PDFsToProcess/sample.pdf"))
print(report.to_json())
PY
```

The `process_pdf` helper wraps the `mineru` CLI and enforces the `vlm-vllm-engine` backend.
